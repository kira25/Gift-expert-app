{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdtB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0FAC2EC,UAC7FH,GAFkB,sBAIGI,MAAMF,GAJT,cAIdG,EAJc,gBAKGA,EAASC,OALZ,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVlB,kBAabM,GAba,4CAAH,sDCCRO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFZ,SAACA,GAAc,IAAD,EACfd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IADf,mBAClCC,EADkC,KAC3BC,EAD2B,KAYzC,OATAC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDRuBK,CAAc1B,GAAhCa,EAF2B,EAEjCN,KAAaa,EAFoB,EAEpBA,QAInB,OACE,qCACE,oBAAIJ,UAAU,yCAAd,SAAwDhB,IACvDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdnBgB,EAAe,WAAM,MAEIzC,mBAAS,CAAC,cAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAShC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG2C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACd,cAAC,EAAD,CAAwB7B,SAAUA,GAApBA,Y,MChBxB8B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.d710155b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTpyes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInput} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTpyes.func.isRequired,\r\n};\r\n","\r\nexport const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=KTG0k1CzPw6YArZ4BuY84OBKbdInyneh&q=${encodeURI(\r\n      category\r\n    )}&limit=10`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\"> \r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifts } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n const {data: images,loading} = useFetchGGifs(category);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__slideInLeft\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n    \r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGGifs = (category) => {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifts(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  //   const categories = [\"One Punch\", \"Samurai X\", \"Dragon ball\"];\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  //   const handelAdd = () => {\r\n  //     const newCategories = [...categories, \"Pokemon\"];\r\n  //     setCategories(newCategories);\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={() => handelAdd()}>Agregar</button> */}\r\n      <ol>\r\n        {categories.map((category, i) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}